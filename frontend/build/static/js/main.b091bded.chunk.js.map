{"version":3,"sources":["App.module.css","api.js","hooks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseUrl","getMetadata","documentId","a","fetch","resp","text","trim","Error","props","Object","fromEntries","split","map","it","filter","pages","title","author","type","getPage","page","toString","padStart","useLocation","useState","window","location","setLocation","listenToPopstate","winLocation","useEffect","addEventListener","removeEventListener","Chapters","chapters","setPageFunction","ListGroup","Item","action","key","name","onClick","DocumentPagination","range","currentPage","goTo","startPage","endPage","start","end","i","Pagination","style","justifyContent","First","Prev","className","styles","expandPaginationItem","active","Next","Last","LoadingImage","src","loading","setLoading","prevSrc","setPrevSrc","imageLoading","display","Spinner","animation","Image","blockInteraction","rounded","width","onLoad","blocker","App","id","setId","metadata","setMetadata","setPage","pageUrl","setPageUrl","goToPageNumber","setGoToPageNumber","error","setError","queryString","parse","search","startsWith","atob","btoa","message","safeSetPage","Math","max","min","Container","Alert","variant","marginTop","Heading","Row","Col","Breadcrumb","href","lg","marginBottom","p","Form","Group","controlId","Control","placeholder","value","onChange","ev","target","Button","parsed","parseInt","isNaN","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b091bded.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageLoading\":\"App_imageLoading__1dDoc\",\"blockInteraction\":\"App_blockInteraction__2SLSa\",\"blocker\":\"App_blocker__oAS1x\",\"expandPaginationItem\":\"App_expandPaginationItem__3KP_b\"};","// toto je url adresa na ktorej sa nachadza backend api potrebne na ziska\r\n// vanie metadat o praca a jednotlivych stran\r\nconst baseUrl = 'http://158.195.10.50:8080'; // bez lomky na konci\r\n\r\n// spravi request na backend a vrati metadata dokumentu `documentId`\r\nexport async function getMetadata(documentId) {\r\n    const resp = await fetch(`${baseUrl}/metadata?praca=${documentId}`);\r\n    const text = await resp.text();\r\n    if (text.trim() === '') {\r\n        throw Error(\"Nemáte povolenie zobraziť daný obsah alebo daný súbor neexistuje.\");\r\n    }\r\n\r\n    const props = Object.fromEntries(text.split(\"\\n\")\r\n        .map(it => it.trim())\r\n        .filter(it => it !== '')\r\n        .map(it => it.split(\":\").map(it => it.trim())));\r\n\r\n    return {\r\n        pages: props['Pages'],\r\n        title: '',\r\n        author: props['Author'],\r\n        type: 'drz',\r\n    }\r\n}\r\n\r\n// vrati URL obrazok strany page dokumentu `documentId`\r\nexport async function getPage(documentId, page) {\r\n    if (page < 0) return null;\r\n    return `${baseUrl}/index?praca=${documentId}&strana=${(1+page).toString().padStart(3, '0')}`;\r\n}\r\n\r\n/**\r\n * Returns textual representation from document type code.\r\n *\r\n * @param documentType document type code\r\n * @return {string} human readable textual representation\r\n */\r\nexport function documentTypeName(documentType) {\r\n    switch (documentType) {\r\n        case 'dzp':\r\n            return 'bakalárske práce';\r\n        case 'ddp':\r\n            return 'diplomové práce';\r\n        case 'dpg':\r\n            return 'dizertačne práce';\r\n        case 'drz':\r\n            return 'rigorózne práce';\r\n        default:\r\n            return 'praca ineho typu';\r\n    }\r\n}\r\n","import {useEffect, useState} from \"react\";\r\n\r\n/**\r\n * Hook that returns current location (`window.location`).\r\n * @return {Location}\r\n */\r\nexport const useLocation = () => {\r\n    const [location, setLocation] = useState(window.location);\r\n    const listenToPopstate = () => {\r\n        const winLocation = window.location;\r\n        setLocation(winLocation);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"popstate\", listenToPopstate);\r\n        return () => {\r\n            window.removeEventListener(\"popstate\", listenToPopstate);\r\n        };\r\n    }, []);\r\n    return location;\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport {getMetadata, getPage} from \"./api\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport styles from './App.module.css';\r\nimport {useLocation} from \"./hooks\";\r\nimport queryString from 'query-string';\r\nimport Alert from \"react-bootstrap/esm/Alert\";\r\n\r\n\r\n/**\r\n * Renders list of chapters of the document.\r\n */\r\nfunction Chapters({chapters, setPageFunction}) {\r\n    return chapters.map(it => {\r\n        return <ListGroup.Item action key={it.name}\r\n                               onClick={() => setPageFunction(it.pages[0])}>{it.name}</ListGroup.Item>\r\n    })\r\n}\r\n\r\n/**\r\n * Renders pagination of the document.\r\n */\r\nfunction DocumentPagination({pages, currentPage, goTo}) {\r\n    let startPage = currentPage - 2;\r\n    let endPage = currentPage + 2;\r\n\r\n    if (startPage < 0) {\r\n        startPage = 0;\r\n        endPage = 4;\r\n    }\r\n    if (endPage > pages - 1) {\r\n        startPage = pages - 5;\r\n        endPage = pages - 1;\r\n    }\r\n\r\n    function* range(start, end) {\r\n        for (let i = start; i <= end; i++) {\r\n            yield i;\r\n        }\r\n    }\r\n\r\n    return (<Pagination style={{justifyContent: 'center'}}>\r\n        <Pagination.First onClick={() => goTo(0)}/>\r\n        <Pagination.Prev onClick={() => goTo(currentPage - 1)}/>\r\n        {\r\n            [...range(startPage, endPage)]\r\n                .map(it => {\r\n                    if (it === currentPage) {\r\n                        return <Pagination.Item className={styles.expandPaginationItem} active key={it}\r\n                                                onClick={() => goTo(it)}>{it + 1}</Pagination.Item>\r\n                    }\r\n                    return <Pagination.Item className={styles.expandPaginationItem} key={it}\r\n                                            onClick={() => goTo(it)}>{it + 1}</Pagination.Item>;\r\n                })\r\n        }\r\n        <Pagination.Next onClick={() => goTo(currentPage + 1)}/>\r\n        <Pagination.Last onClick={() => goTo(pages - 1)}/>\r\n    </Pagination>)\r\n}\r\n\r\n/**\r\n * Renders loading while image is loading and then renders the image in non-copiable way.\r\n */\r\nfunction LoadingImage({src}) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [prevSrc, setPrevSrc] = useState(null);\r\n\r\n    if (prevSrc !== src) {\r\n        setLoading(true);\r\n        setPrevSrc(src);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.imageLoading} style={{display: loading ? 'flex' : 'none'}}>\r\n                <Spinner animation=\"border\"/>\r\n            </div>\r\n            <div style={{display: loading ? 'none' : 'block'}}>\r\n                <Image className={styles.blockInteraction}\r\n                       src={src}\r\n                       rounded\r\n                       style={{width: '100%'}}\r\n                       onLoad={() => setLoading(false)}\r\n                />\r\n                <div className={styles.blocker}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n/**\r\n * Renders whole viewer application.\r\n */\r\nfunction App() {\r\n    let location = useLocation();\r\n    let [id, setId] = useState(null);\r\n    let [metadata, setMetadata] = useState(null);\r\n    let [page, setPage] = useState(0);\r\n    let [pageUrl, setPageUrl] = useState(null);\r\n    let [goToPageNumber, setGoToPageNumber] = useState(\"\");\r\n    let [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const params = queryString.parse(location.search);\r\n        let id = params.id;\r\n\r\n        // tuto skryjeme adresu v prehliadaci aby sme zabezpecili bezpecnost\r\n        if (id.startsWith('L')) {\r\n            id = atob(id);\r\n        } else {\r\n            window.location.search = '?id=' + btoa(id);\r\n        }\r\n\r\n        setId(id || 'invalid-document');\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (id !== null) {\r\n                try {\r\n                    setMetadata(await getMetadata(id));\r\n                    setPage(0);\r\n                } catch (e) {\r\n                    setError(e.message);\r\n                }\r\n            }\r\n        })();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (id !== null) {\r\n                setPageUrl(await getPage(id, page));\r\n            }\r\n        })();\r\n    }, [id, page]);\r\n\r\n    const safeSetPage = (page) => setPage(Math.max(0, Math.min(page, metadata.pages - 1)));\r\n\r\n    if (error != null) {\r\n        return <div className=\"App\">\r\n            <Container>\r\n                <Alert variant=\"danger\" style={{marginTop: '1em'}}>\r\n                    <Alert.Heading>Jejda! Nastala chyba!</Alert.Heading>\r\n                    <p>{error}</p>\r\n                </Alert>\r\n            </Container>\r\n        </div>\r\n    }\r\n\r\n    if (metadata == null) {\r\n        return <Spinner animation=\"border\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"https://alis.uniba.sk:8443/\">Súborný online katalóg UK</Breadcrumb.Item>\r\n                            <Breadcrumb.Item active>Prehliadač</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        {metadata.chapters && <>\r\n                            <h4>Kapitoly</h4>\r\n                            <ListGroup style={{marginBottom: '1em'}}>\r\n                                <Chapters chapters={metadata.chapters} setPageFunction={safeSetPage}/>\r\n                            </ListGroup>\r\n                        </>}\r\n\r\n                        <h4>Navigácia</h4>\r\n                        <Row style={{marginTop: '1em'}}>\r\n                            <Col>\r\n                                <DocumentPagination currentPage={page} pages={metadata.pages}\r\n                                                    goTo={(p) => safeSetPage(p)}/>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <h4>Prejsť na stranu</h4>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"number\" placeholder=\"číslo strany\" value={goToPageNumber}\r\n                                          onChange={(ev) => setGoToPageNumber(ev.target.value)}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={() => {\r\n                            const parsed = parseInt(goToPageNumber);\r\n                            if(!isNaN(parsed)) {\r\n                                safeSetPage(parsed - 1);\r\n                                setGoToPageNumber(\"\");\r\n                            }\r\n                        }}>\r\n                            Prejsť na stranu\r\n                        </Button>\r\n\r\n                    </Col>\r\n\r\n                    <Col lg={8}>\r\n                        <Row>\r\n                            <Col>\r\n                                <LoadingImage src={pageUrl}/>\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}